/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Dashboard;

import Business.Ecosystem;
import Business.Model.InsuranceAdmin;
import Business.Model.Patient;
import Business.sendMail;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shreya
 */
public class InsuranceAdminDashboardUI extends javax.swing.JPanel {

    /**
     * Creates new form InsuranceAdminDashboardUI
     */
    public InsuranceAdminDashboardUI() {
        initComponents();
    }
    Ecosystem ecosystem;
    InsuranceAdmin insuranceAdmin;
    
    public InsuranceAdminDashboardUI(Ecosystem ecosystem, InsuranceAdmin insuranceAdmin) {
        initComponents();
        
        this.ecosystem = ecosystem;
        this.insuranceAdmin = insuranceAdmin;
        
        populateInsuranceAdminPatientTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInsuranceAdminPatient = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 153, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Admin");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 15, -1, -1));

        tblInsuranceAdminPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Address", "City", "Insurance Request Status"
            }
        ));
        jScrollPane1.setViewportView(tblInsuranceAdminPatient);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 695, 200));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Approve Request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 360, 210, 38));

        jButton2.setBackground(new java.awt.Color(0, 204, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("BACK");
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 15, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dashboard/bg1.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 800, 800));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int selectedRowIndex =tblInsuranceAdminPatient .getSelectedRow();

        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please Select a row of Patient table");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblInsuranceAdminPatient.getModel();

        Patient p  = (Patient) model.getValueAt(selectedRowIndex, 0);

        if(p.getAccountBal()>= insuranceAdmin.getPremium())
        {
            p.setAccountBal(p.getAccountBal() - insuranceAdmin.getPremium());
            p.setCoverAmount(p.getCoverAmount()+insuranceAdmin.getCoverage());
            p.setInsuranceRequest("Approved");
            try{
            sendMail.send(p.getEmail(),"Insurance Request is approved","Your Insurance request was approved");
            }
            catch(Exception exp){
                exp.printStackTrace();
            }
            JOptionPane.showMessageDialog(this, "Insurance Request is approved");
            
            populateInsuranceAdminPatientTable();
        }

        else{
            try{
                sendMail.send(p.getEmail(),"Insurance Request is not approved","Your Insurance request was not approved.\n Please contact your insurance admin for further details");
            }
            catch(Exception exp){
            }
            
            JOptionPane.showMessageDialog(this, "User doesnt have enough account balance");

        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInsuranceAdminPatient;
    // End of variables declaration//GEN-END:variables

    private void populateInsuranceAdminPatientTable() {
        DefaultTableModel model = (DefaultTableModel) tblInsuranceAdminPatient.getModel();
        model.setRowCount(0);
     for( Patient p : insuranceAdmin.getInsurancePatientList())
     {
          Object[] row = new Object[4];
          row[0]=p;
          row[1]=p.getAddress();
          row[2]=p.getCity().getCityName();
          row[3]=p.getInsuranceRequest();
          model.addRow(row);
     }
    }
}
