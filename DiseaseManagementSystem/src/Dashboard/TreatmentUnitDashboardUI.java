/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Dashboard;

import Business.Admins.TreatmentUnitAdmin;
import Business.Ecosystem;
import Business.Model.Encounter;
import Business.Model.Patient;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shreya
 */
public class TreatmentUnitDashboardUI extends javax.swing.JPanel {

    /**
     * Creates new form TreatmentUnitDashboardUI
     */
    Ecosystem ecosystem;
    TreatmentUnitAdmin treatmentUnitAdmin;
    public TreatmentUnitDashboardUI(Ecosystem ecosystem, TreatmentUnitAdmin treatmentUnitAdmin) {
        initComponents();
        this.ecosystem = ecosystem;
        this.treatmentUnitAdmin = treatmentUnitAdmin;
        
        populateTreatmentUnitAdminStatusTable();
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTreatmentAdminViewMoreInfo = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTreatmentAdminStatus = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblTreatmentAdminViewMoreInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Medicine(Pharmacy) Status", "Laboratory Status", "Treatment Status"
            }
        ));
        jScrollPane1.setViewportView(tblTreatmentAdminViewMoreInfo);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 374, 667, 191));

        tblTreatmentAdminStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient Name", "Treatment status", "Encounter"
            }
        ));
        jScrollPane2.setViewportView(tblTreatmentAdminStatus);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 125, 616, 167));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("View More Information");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 304, 212, 36));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Mark Complete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 304, 213, 36));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Treatment Unit");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 260, -1));

        jButton3.setBackground(new java.awt.Color(0, 204, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("BACK");
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dashboard/bg1.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 800));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        populateTreatmentUnitDashboardTableMoreInfo();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int selectedRowIndex = tblTreatmentAdminStatus.getSelectedRow();

        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please Select a Patient to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblTreatmentAdminStatus.getModel();
        Encounter e = (Encounter) model.getValueAt(selectedRowIndex, 2);
        Patient p = (Patient) model.getValueAt(selectedRowIndex, 0);

        if((e.getTreatment().getMedicineStatus().equalsIgnoreCase("Completed")) && (e.getTreatment().getLaboratoryStatus().equalsIgnoreCase("Completed")))
        {
            e.getTreatment().setTreatmentStatus("Completed");
            JOptionPane.showMessageDialog(this, "Treatment is complete for selected patient");
            populateTreatmentUnitAdminStatusTable();

            DefaultTableModel model3 = (DefaultTableModel) tblTreatmentAdminViewMoreInfo.getModel();
            model3.setRowCount(0);

        }

        else {
            JOptionPane.showMessageDialog(this, "Cannot mark complete till Medicine status and Laboraroty status is complete");

        }

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblTreatmentAdminStatus;
    private javax.swing.JTable tblTreatmentAdminViewMoreInfo;
    // End of variables declaration//GEN-END:variables

    private void populateTreatmentUnitDashboardTableMoreInfo() {
        int selectedRowIndex = tblTreatmentAdminStatus.getSelectedRow();
        
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please Select a Patient to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblTreatmentAdminStatus.getModel();
        Encounter e = (Encounter) model.getValueAt(selectedRowIndex, 2);
        Patient p = (Patient) model.getValueAt(selectedRowIndex, 0);
        
        DefaultTableModel model1 = (DefaultTableModel) tblTreatmentAdminViewMoreInfo.getModel();       
        model1.setRowCount(0);
   
        Object[] row = new Object[4];
        row[0]=p;
        row[1]=e.getTreatment().getMedicineStatus();
        row[2]=e.getTreatment().getLaboratoryStatus();
        row[3]=e.getTreatment().getTreatmentStatus();
        model1.addRow(row);
        
    }

    private void populateTreatmentUnitAdminStatusTable() {
        DefaultTableModel model = (DefaultTableModel) tblTreatmentAdminStatus.getModel();
        model.setRowCount(0);
        for( Patient p : ecosystem.getPatientList().getPatientList())
        {
            System.out.println(p.getName());
            for(Encounter e : p.getEncounterHistory())
            {
                        System.out.println(e);
                        Object[] row = new Object[3];
                        row[0]=p;
                        row[1]=e.getTreatment().getTreatmentStatus();
                        row[2]=e;
                        model.addRow(row);
            }
        }
    }
}
