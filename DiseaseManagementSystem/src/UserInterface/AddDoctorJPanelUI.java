/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface;

import Business.Ecosystem;
import Business.Model.City;
import Business.Model.Doctor;
import Business.Model.Hospital;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Shreya
 */
public class AddDoctorJPanelUI extends javax.swing.JPanel {

    /**
     * Creates new form AddDoctorJPanelUI
     */
    Ecosystem ecosystem;
        JPanel workArea;
    
    public AddDoctorJPanelUI(JPanel workArea,Ecosystem e) {
        initComponents();
        this.ecosystem = e;
        this.workArea = workArea;
        populateCombos();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDocName = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtDocUname = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDocPwd = new javax.swing.JTextField();
        txtDoctorHospital = new javax.swing.JComboBox<>();
        txtDoctorQualification = new javax.swing.JComboBox<>();
        txtDocCity = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 153, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 204, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Add Doctor");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 32, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Doctor Name :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 141, 114, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Doctor Qualification :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Hospital:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 114, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("City:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 114, -1));

        txtDocName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocNameActionPerformed(evt);
            }
        });
        add(txtDocName, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 138, 170, -1));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 390, 90, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Username:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 114, -1));

        txtDocUname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocUnameActionPerformed(evt);
            }
        });
        add(txtDocUname, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 170, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Password:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 114, -1));

        txtDocPwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocPwdActionPerformed(evt);
            }
        });
        add(txtDocPwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 170, -1));

        add(txtDoctorHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 170, -1));

        txtDoctorQualification.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MBBS", "MD", "BAMS", "BS" }));
        add(txtDoctorQualification, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 170, -1));

        add(txtDocCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 170, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/bg2 small.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 800, 820));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
CardLayout cardLayout = (CardLayout) workArea.getLayout();
        workArea.remove(this);
        cardLayout.previous(workArea);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtDocNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocNameActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String name = txtDocName.getText();
        String username = txtDocUname.getText();
        String password = txtDocPwd.getText();
        String qualification = txtDoctorQualification.getSelectedItem().toString();
        String city = txtDocCity.getSelectedItem().toString();
        String hospital= txtDoctorHospital.getSelectedItem().toString();
            
            
     if(name.isEmpty() || username.isEmpty() || password.isEmpty() || qualification.isEmpty() || city.isEmpty() || hospital.isEmpty())
     {
                 JOptionPane.showMessageDialog(this, "Enter all mandatory fields");

         
     }
     
     else{
            
            
        for(Doctor d : ecosystem.getDoctorList().getDoctorList())
        {
            if((d.getUsername().equalsIgnoreCase(username))&& (d.getPassword().equalsIgnoreCase(password)))
            {
                
                        JOptionPane.showMessageDialog(this, "Doctor's Username and password should be unique");
                        return;

                
            }
        }
            
            
            City c = ecosystem.getCityList().findCityByCityName(city);
            Hospital h = ecosystem.getHospitalList().findHospitalByHospitalName(hospital);
            
            
            Doctor doc = ecosystem.getDoctorList().addDoctor();
            doc.setName(name);
            doc.setUsername(username);
            doc.setPassword(password);
            doc.setQualification(qualification);
            doc.setCity(c);
            doc.setHospital(h);
            
            JOptionPane.showMessageDialog(this, "Doctor added");
            
     }      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtDocUnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocUnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocUnameActionPerformed

    private void txtDocPwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocPwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocPwdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> txtDocCity;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtDocPwd;
    private javax.swing.JTextField txtDocUname;
    private javax.swing.JComboBox<String> txtDoctorHospital;
    private javax.swing.JComboBox<String> txtDoctorQualification;
    // End of variables declaration//GEN-END:variables

    private void populateCombos() {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        if(!ecosystem.getCityList().getCityList().isEmpty()){
            for(City c: ecosystem.getCityList().getCityList()){
                txtDocCity.addItem(c.getCityName());
            }
        }
        if(!ecosystem.getHospitalList().getHospitalList().isEmpty()){
            for(Hospital h : ecosystem.getHospitalList().getHospitalList()){
                txtDoctorHospital.addItem(h.getHospitalName());
            }
        }
    
    }
}
