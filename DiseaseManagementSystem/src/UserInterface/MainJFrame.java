/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface;

import Business.Admins.LaboratoryAdmin;
import Business.Admins.NGOAdmin;
import Business.Admins.PharmacyAdmin;
import Business.Admins.TreatmentUnitAdmin;
import Business.ConfigureASystem;
//import Business.DB4OUtil;
import Business.Ecosystem;
import Business.Model.Doctor;
import Business.Model.InsuranceAdmin;
import Business.Model.Patient;
import Dashboard.DoctorDashboardUI;
import Dashboard.GovernmentDashboardUI;
import Dashboard.InsuranceAdminDashboardUI;
import Dashboard.LabAdminDashboardUI;
import Dashboard.NGOAdminDashboardUI;
import Dashboard.Patient.PatientDashboardUI;
import Dashboard.PharmacyDashboardUI;
import Dashboard.TreatmentUnitDashboardUI;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author ameysatwe
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    Ecosystem ecosystem;

    public MainJFrame() {
        initComponents();
        ecosystem = ConfigureASystem.configure();
//        ecosystem = dB4OUtil.retrieveSystem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        txtPassword = new javax.swing.JTextField();
        loginCombo = new javax.swing.JComboBox<>();
        btnLogout = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        WorkArea = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));

        loginCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "System Admin", "Doctor", "Patient", "Laboratory Admin", "Treatment Unit Admin", "Pharmacy Admin", "NGO Admin", "Insurance Admin", "Government Admin", " " }));

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel1.setText("Password:");

        jLabel2.setText("Username:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(loginCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogout)
                .addContainerGap(731, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        WorkArea.setBackground(new java.awt.Color(102, 153, 255));
        WorkArea.setLayout(new java.awt.CardLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/logo.jpg"))); // NOI18N
        WorkArea.add(jLabel3, "card2");

        jSplitPane1.setRightComponent(WorkArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:

//        db4outil.storeSystem(ecosystem);
        WorkArea.removeAll();

        logout_panel blankJP = new logout_panel();
        WorkArea.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) WorkArea.getLayout();
        crdLyt.next(WorkArea);
//        dB4OUtil.storeSystem(ecosystem);
        btnLogin.setEnabled(true);
        btnLogout.setEnabled(false);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed

        WorkArea.removeAll();

        if (loginCombo.getSelectedItem().toString().equals("System Admin")) {
            if ((txtUsername.getText().equals("admin")) && (txtPassword.getText().equals("admin"))) {

                btnLogin.setEnabled(false);
                btnLogout.setEnabled(true);
                AddDataUI AdminLanding = new AddDataUI(WorkArea, ecosystem);
                WorkArea.add("System Admin", AdminLanding);
                CardLayout layout = (CardLayout) WorkArea.getLayout();
                layout.next(WorkArea);

            } else {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");

            }

        } else if (loginCombo.getSelectedItem().toString().equals("Pharmacy Admin")) {

            boolean flag = false;
            for (PharmacyAdmin pa : ecosystem.getPharmacyAdminList().getPharmacyAdminList()) {
                if ((pa.getUsername().equals(txtUsername.getText())) && (pa.getPassword().equals(txtPassword.getText()))) {

                    btnLogin.setEnabled(false);
                    btnLogout.setEnabled(true);

                    PharmacyDashboardUI pharmacyAdminDashboard = new PharmacyDashboardUI(ecosystem, pa);
                    WorkArea.add("Pharmacy Admin Dashboard", pharmacyAdminDashboard);
                    CardLayout layout = (CardLayout) WorkArea.getLayout();
                    layout.next(WorkArea);

                    flag = true;

                }

            }

            if (!flag) {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }

        } else if (loginCombo.getSelectedItem().toString().equals("Patient")) {
            boolean flag = false;
            for (Patient p : ecosystem.getPatientList().getPatientList()) {
                if ((p.getUsername().equals(txtUsername.getText())) && (p.getPassword().equals(txtPassword.getText()))) {

                    btnLogin.setEnabled(false);
                    btnLogout.setEnabled(true);
                    PatientDashboardUI patientDashboard = new PatientDashboardUI(ecosystem, p, WorkArea);
                    WorkArea.add("System Admin", patientDashboard);
                    CardLayout layout = (CardLayout) WorkArea.getLayout();
                    layout.next(WorkArea);
                    flag = true;

                }

            }

            if (!flag) {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }

        } else if (loginCombo.getSelectedItem().toString().equals("Doctor")) {

            boolean flag = false;
            for (Doctor d : ecosystem.getDoctorList().getDoctorList()) {
                if ((d.getUsername().equals(txtUsername.getText())) && (d.getPassword().equals(txtPassword.getText()))) {

                    btnLogin.setEnabled(false);
                    btnLogout.setEnabled(true);
                    DoctorDashboardUI doctorDashboard = new DoctorDashboardUI(ecosystem, d);
                    WorkArea.add("System Admin", doctorDashboard);
                    CardLayout layout = (CardLayout) WorkArea.getLayout();
                    layout.next(WorkArea);
                    flag = true;

                }

            }

            if (!flag) {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }

        } else if (loginCombo.getSelectedItem().toString().equals("Laboratory Admin")) {

            boolean flag = false;
            for (LaboratoryAdmin la : ecosystem.getLaboratoryAdminList().getLaboratoryAdminList()) {
                if ((la.getUsername().equals(txtUsername.getText())) && (la.getPassword().equals(txtPassword.getText()))) {

                    btnLogin.setEnabled(false);
                    btnLogout.setEnabled(true);

                    LabAdminDashboardUI labAdminDashboard = new LabAdminDashboardUI(ecosystem, la);

                    WorkArea.add("System Admin", labAdminDashboard);
                    CardLayout layout = (CardLayout) WorkArea.getLayout();
                    layout.next(WorkArea);

                    flag = true;

                }

            }

            if (!flag) {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }

        } else if (loginCombo.getSelectedItem().toString().equals("Treatment Unit Admin")) {

            boolean flag = false;
            for (TreatmentUnitAdmin ta : ecosystem.getTreatmentUnitAdminList().getTreatmentUnitAdminList()) {
                if ((ta.getUsername().equals(txtUsername.getText())) && (ta.getPassword().equals(txtPassword.getText()))) {

                    btnLogin.setEnabled(false);
                    btnLogout.setEnabled(true);

                    TreatmentUnitDashboardUI treatmentUnitAdminDashboard = new TreatmentUnitDashboardUI(ecosystem, ta);

                    WorkArea.add("System Admin", treatmentUnitAdminDashboard);
                    CardLayout layout = (CardLayout) WorkArea.getLayout();
                    layout.next(WorkArea);

                    flag = true;

                }

            }

            if (!flag) {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }

        } else if (loginCombo.getSelectedItem().toString().equals("NGO Admin")) {

            boolean flag = false;
            for (NGOAdmin na : ecosystem.getnGOAdminList().getNgoAdminList()) {
                if ((na.getUsername().equals(txtUsername.getText())) && (na.getPassword().equals(txtPassword.getText()))) {

                    btnLogin.setEnabled(false);
                    btnLogout.setEnabled(true);

                    NGOAdminDashboardUI nGOAdminDashboard = new NGOAdminDashboardUI(ecosystem, na);

                    WorkArea.add("System Admin", nGOAdminDashboard);
                    CardLayout layout = (CardLayout) WorkArea.getLayout();
                    layout.next(WorkArea);

                    flag = true;

                }

            }

            if (!flag) {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }

        } else if (loginCombo.getSelectedItem().toString().equals("Insurance Admin")) {

            boolean flag = false;
            for (InsuranceAdmin ia : ecosystem.getInsuranceAdminList().getInsuranceAdminList()) {
                if ((ia.getUsername().equals(txtUsername.getText())) && (ia.getPassword().equals(txtPassword.getText()))) {

                    btnLogin.setEnabled(false);
                    btnLogout.setEnabled(true);

                    InsuranceAdminDashboardUI insuranceAdminDashboard = new InsuranceAdminDashboardUI(ecosystem, ia);

                    WorkArea.add("System Admin", insuranceAdminDashboard);
                    CardLayout layout = (CardLayout) WorkArea.getLayout();
                    layout.next(WorkArea);

                    flag = true;

                }

            }

            if (!flag) {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");
            }

        }

        if (loginCombo.getSelectedItem().toString().equals("Government Admin")) {
            if ((txtUsername.getText().equals("gov")) && (txtPassword.getText().equals("gov"))) {

                btnLogin.setEnabled(false);
                btnLogout.setEnabled(true);
                GovernmentDashboardUI governmentDashboard = new GovernmentDashboardUI(ecosystem);
                WorkArea.add("System Admin", governmentDashboard);
                CardLayout layout = (CardLayout) WorkArea.getLayout();
                layout.next(WorkArea);

            } else {
                JOptionPane.showMessageDialog(this, "Invalid Credentials");

            }

        }
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel WorkArea;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JComboBox<String> loginCombo;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
